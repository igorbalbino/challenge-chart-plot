{"ast":null,"code":"var _jsxFileName = \"/home/igor/Documentos/GitHub/challenge-chart-plot/my-app/src/App.js\";\nimport './App.css';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  document.addEventListener('click', function () {\n    const user_input = document.getElementById('user_input');\n    if (user_input.value !== '') {\n      let val = null;\n      val = user_input.value.replace(/\\s/g, '');\n      val = val.split(',');\n      drawChart(val);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Digite numeros separados por , para gerar um grafico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"user_input\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"sender\",\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"mychart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nfunction drawChart(val) {\n  const ctx = document.getElementById('mychart');\n  new Chart(ctx, {\n    type: 'line',\n    data: {\n      datasets: [{\n        abel: 'My First Dataset',\n        data: val,\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1\n      }]\n    },\n    options: {\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    }\n  });\n}\nfunction makeNumberAndObj(arr) {\n  arr = arr.array.forEach(element => {\n    return parseFloat(element);\n  });\n  return {\n    type: \"data\",\n    timestamp: new Date.now(),\n    values: arr\n  };\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Chart","App","document","addEventListener","user_input","getElementById","value","val","replace","split","drawChart","ctx","type","data","datasets","abel","fill","borderColor","tension","options","scales","y","beginAtZero","makeNumberAndObj","arr","array","forEach","element","parseFloat","timestamp","Date","now","values"],"sources":["/home/igor/Documentos/GitHub/challenge-chart-plot/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Chart from 'chart.js/auto';\n\nfunction App() {\n  document.addEventListener('click', function(){\n    const user_input = document.getElementById('user_input');\n\n    if(user_input.value !== '') {\n      let val = null;\n      val = user_input.value.replace(/\\s/g, '');\n      val = val.split(',');\n      drawChart(val);\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <h3>Digite numeros separados por , para gerar um grafico</h3>\n      <input id=\"user_input\" type=\"text\" />\n      <input id=\"sender\" type=\"submit\" />\n      <div><canvas id=\"mychart\"></canvas></div>\n    </div>\n  );\n}\n\nfunction drawChart(val){\n  const ctx = document.getElementById('mychart');\n\n  new Chart(ctx, {\n    type: 'line',\n    data: {\n      datasets: [{\n        abel: 'My First Dataset',\n        data: val,\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1\n      }]\n    },\n    options: {\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    }\n  });\n}\n\nfunction makeNumberAndObj(arr) {\n  arr = arr.array.forEach(element => {\n    return parseFloat(element);\n  });\n  \n  return {type: \"data\",\n  timestamp: new Date.now(),\n  values: arr};\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,eAAe;AAAC;AAElC,SAASC,GAAG,GAAG;EACbC,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,YAAU;IAC3C,MAAMC,UAAU,GAAGF,QAAQ,CAACG,cAAc,CAAC,YAAY,CAAC;IAExD,IAAGD,UAAU,CAACE,KAAK,KAAK,EAAE,EAAE;MAC1B,IAAIC,GAAG,GAAG,IAAI;MACdA,GAAG,GAAGH,UAAU,CAACE,KAAK,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;MACzCD,GAAG,GAAGA,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;MACpBC,SAAS,CAACH,GAAG,CAAC;IAChB;EACF,CAAC,CAAC;EAEF,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAI;IAAoD;MAAA;MAAA;MAAA;IAAA,QAAK,eAC7D;MAAO,EAAE,EAAC,YAAY;MAAC,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACrC;MAAO,EAAE,EAAC,QAAQ;MAAC,IAAI,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eACnC;MAAA,uBAAK;QAAQ,EAAE,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACrC;AAEV;AAAC,KApBQN,GAAG;AAsBZ,SAASS,SAAS,CAACH,GAAG,EAAC;EACrB,MAAMI,GAAG,GAAGT,QAAQ,CAACG,cAAc,CAAC,SAAS,CAAC;EAE9C,IAAIL,KAAK,CAACW,GAAG,EAAE;IACbC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE;MACJC,QAAQ,EAAE,CAAC;QACTC,IAAI,EAAE,kBAAkB;QACxBF,IAAI,EAAEN,GAAG;QACTS,IAAI,EAAE,KAAK;QACXC,WAAW,EAAE,mBAAmB;QAChCC,OAAO,EAAE;MACX,CAAC;IACH,CAAC;IACDC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,WAAW,EAAE;QACf;MACF;IACF;EACF,CAAC,CAAC;AACJ;AAEA,SAASC,gBAAgB,CAACC,GAAG,EAAE;EAC7BA,GAAG,GAAGA,GAAG,CAACC,KAAK,CAACC,OAAO,CAACC,OAAO,IAAI;IACjC,OAAOC,UAAU,CAACD,OAAO,CAAC;EAC5B,CAAC,CAAC;EAEF,OAAO;IAACf,IAAI,EAAE,MAAM;IACpBiB,SAAS,EAAE,IAAIC,IAAI,CAACC,GAAG,EAAE;IACzBC,MAAM,EAAER;EAAG,CAAC;AACd;AAEA,eAAevB,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}